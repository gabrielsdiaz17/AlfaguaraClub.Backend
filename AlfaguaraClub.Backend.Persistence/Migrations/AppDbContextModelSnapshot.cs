// <auto-generated />
using System;
using AlfaguaraClub.Backend.Persistence.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlfaguaraClub.Backend.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Billing", b =>
                {
                    b.Property<long>("BillingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("BillingId"));

                    b.Property<long?>("BookingId")
                        .HasColumnType("bigint");

                    b.Property<string>("Concept")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<double?>("PercentageTaxes")
                        .HasColumnType("double");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("TaxesValue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalPayment")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("BillingId");

                    b.HasIndex("BookingId");

                    b.HasIndex("UserId");

                    b.ToTable("Billing");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Booking", b =>
                {
                    b.Property<long>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("BookingId"));

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("MembershipId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpaceActivityId")
                        .HasColumnType("bigint");

                    b.Property<int>("StatusBookingId")
                        .HasColumnType("int");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("BookingId");

                    b.HasIndex("MembershipId");

                    b.HasIndex("SpaceActivityId");

                    b.HasIndex("StatusBookingId");

                    b.HasIndex("UserId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Company", b =>
                {
                    b.Property<long>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("CompanyId"));

                    b.Property<string>("CompanyIdentifier")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CompanyLogo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdentificationTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CompanyId");

                    b.HasIndex("IdentificationTypeId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.CostCenter", b =>
                {
                    b.Property<long>("CostCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("CostCenterId"));

                    b.Property<string>("CostCenterCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CostCenterName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("SiteId")
                        .HasColumnType("bigint");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CostCenterId");

                    b.HasIndex("SiteId");

                    b.ToTable("CostCenter");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.IdentificationType", b =>
                {
                    b.Property<int>("IdendificationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdendificationTypeId"));

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("IdentificationTypeCode")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nomenclature")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdendificationTypeId");

                    b.ToTable("IdentificationType");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Membership", b =>
                {
                    b.Property<long>("MembershipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("MembershipId"));

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UniqueIdentifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("MembershipId");

                    b.ToTable("Membership");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Notification", b =>
                {
                    b.Property<long>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("NotificationId"));

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("NotificationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("NotificationSent")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("NotificationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("NotificationId");

                    b.HasIndex("NotificationTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.NotificationType", b =>
                {
                    b.Property<int>("NotificationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("NotificationTypeId"));

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NotificationTypeDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("NotificationTypeId");

                    b.ToTable("NotificationType");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Parameter", b =>
                {
                    b.Property<long>("ParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("ParameterId"));

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ParameterName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ParameterValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ParameterId");

                    b.ToTable("Parameter");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Picture", b =>
                {
                    b.Property<long>("PictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("PictureId"));

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PictureData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PictureType")
                        .HasColumnType("int");

                    b.Property<long?>("SpaceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PictureId");

                    b.HasIndex("SpaceId");

                    b.HasIndex("StoryId");

                    b.ToTable("Picture");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Session", b =>
                {
                    b.Property<long>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("SessionId"));

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExpiryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Site", b =>
                {
                    b.Property<long>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("SiteId"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SiteAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SiteLocationMap")
                        .HasColumnType("text");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("SiteId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Space", b =>
                {
                    b.Property<long>("SpaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("SpaceId"));

                    b.Property<long>("CostCenterId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SpaceDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SpaceName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("VideoLink")
                        .HasColumnType("text");

                    b.HasKey("SpaceId");

                    b.HasIndex("CostCenterId");

                    b.ToTable("Space");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.SpaceActivity", b =>
                {
                    b.Property<long>("SpaceActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("SpaceActivityId"));

                    b.Property<DateTimeOffset>("ActivityDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ActivityDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("ActivityHour")
                        .HasColumnType("time(6)");

                    b.Property<string>("ActivityName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("AvailableQuorum")
                        .HasColumnType("int");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("SpaceId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TypeActivityId")
                        .HasColumnType("int");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("SpaceActivityId");

                    b.HasIndex("SpaceId");

                    b.HasIndex("TypeActivityId");

                    b.ToTable("SpaceActivity");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.StatusBooking", b =>
                {
                    b.Property<int>("StatusBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StatusBookingId"));

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StatusBookingId");

                    b.ToTable("StatusBooking");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Story", b =>
                {
                    b.Property<long>("StoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("StoryId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PriorityRating")
                        .HasColumnType("int");

                    b.Property<long?>("SpaceActivityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SpaceActivityId");

                    b.ToTable("Story");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.TypeActivity", b =>
                {
                    b.Property<int>("TypeActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TypeActivityId"));

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TypeActivityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("TypeActivityId");

                    b.ToTable("TypeActivity");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("UserId"));

                    b.Property<bool>("AcceptProtectionData")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CityAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<int>("IdentificationTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long?>("MembershipId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Photograph")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeUser")
                        .HasColumnType("int");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId");

                    b.HasIndex("IdentificationTypeId");

                    b.HasIndex("MembershipId");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Billing", b =>
                {
                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingId");

                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.User", "User")
                        .WithMany("Billings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Booking", b =>
                {
                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.Membership", "Membership")
                        .WithMany()
                        .HasForeignKey("MembershipId");

                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.SpaceActivity", "SpaceActivity")
                        .WithMany("Bookings")
                        .HasForeignKey("SpaceActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.StatusBooking", "StatusBooking")
                        .WithMany()
                        .HasForeignKey("StatusBookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membership");

                    b.Navigation("SpaceActivity");

                    b.Navigation("StatusBooking");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Company", b =>
                {
                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.IdentificationType", "IdentificationType")
                        .WithMany()
                        .HasForeignKey("IdentificationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentificationType");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.CostCenter", b =>
                {
                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.Site", "Site")
                        .WithMany("CostCenters")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Notification", b =>
                {
                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.NotificationType", "NotificationType")
                        .WithMany()
                        .HasForeignKey("NotificationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotificationType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Picture", b =>
                {
                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.Space", "Space")
                        .WithMany("Pictures")
                        .HasForeignKey("SpaceId");

                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.Story", "Story")
                        .WithMany("Pictures")
                        .HasForeignKey("StoryId");

                    b.Navigation("Space");

                    b.Navigation("Story");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Session", b =>
                {
                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.User", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Site", b =>
                {
                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.Company", "Company")
                        .WithMany("Sites")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Space", b =>
                {
                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.CostCenter", "CostCenter")
                        .WithMany("Spaces")
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostCenter");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.SpaceActivity", b =>
                {
                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.Space", "Space")
                        .WithMany("SpaceActivities")
                        .HasForeignKey("SpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.TypeActivity", "TypeActivity")
                        .WithMany()
                        .HasForeignKey("TypeActivityId");

                    b.Navigation("Space");

                    b.Navigation("TypeActivity");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Story", b =>
                {
                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.Category", "Category")
                        .WithMany("Stories")
                        .HasForeignKey("CategoryId");

                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.SpaceActivity", "Activity")
                        .WithMany()
                        .HasForeignKey("SpaceActivityId");

                    b.Navigation("Activity");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.User", b =>
                {
                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.IdentificationType", "IdentificationType")
                        .WithMany()
                        .HasForeignKey("IdentificationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.Membership", "Membership")
                        .WithMany("Users")
                        .HasForeignKey("MembershipId");

                    b.HasOne("AlfaguaraClub.Backend.Persistence.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentificationType");

                    b.Navigation("Membership");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Category", b =>
                {
                    b.Navigation("Stories");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Company", b =>
                {
                    b.Navigation("Sites");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.CostCenter", b =>
                {
                    b.Navigation("Spaces");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Membership", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Site", b =>
                {
                    b.Navigation("CostCenters");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Space", b =>
                {
                    b.Navigation("Pictures");

                    b.Navigation("SpaceActivities");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.SpaceActivity", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.Story", b =>
                {
                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("AlfaguaraClub.Backend.Persistence.Models.User", b =>
                {
                    b.Navigation("Billings");

                    b.Navigation("Bookings");

                    b.Navigation("Notifications");

                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
